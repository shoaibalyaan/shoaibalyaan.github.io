{"version":3,"sources":["webpack:///./src/styles/blog.module.css","webpack:///./src/pages/blog.js"],"names":["module","exports","blog","blogList","data","Blogs","edges","map","edge","id","node","title","frontmatter","date","author","img","thumbnail","childImageSharp","fluid","abstract","slug","fields","className","styles","container","divider","style","color","length","key","column","to","textDecoration","imgContainer","info","fontSize","marginBottom","query"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,UAAY,gCAAgC,SAAW,+BAA+B,OAAS,6BAA6B,KAAO,2BAA2B,aAAe,mCAAmC,UAAY,gCAAgC,kBAAoB,wCAAwC,QAAU,gC,kCCDpV,8NAWe,SAASC,EAAT,GAAyB,IAChCC,EAD+B,EAARC,KACPC,MAAMC,MAAMC,KAAI,SAAAC,GACpC,MAAO,CACLC,GAAID,EAAKE,KAAKD,GACdE,MAAOH,EAAKE,KAAKE,YAAYD,MAC7BE,KAAML,EAAKE,KAAKE,YAAYC,KAC5BC,OAAQN,EAAKE,KAAKE,YAAYE,OAC9BC,IAAKP,EAAKE,KAAKE,YAAYI,UAAUC,gBAAgBC,MACrDC,SAAUX,EAAKE,KAAKE,YAAYO,SAChCC,KAAMZ,EAAKE,KAAKW,OAAOD,SAI3B,OACE,6BACE,kBAAC,IAAD,MACA,yBAAKE,UAAWC,IAAOC,WACrB,kBAAC,IAAD,CAAQC,QAAQ,OAAOC,MAAO,CAAEC,MAAO,UAAvC,yBACwB,2BAAIxB,EAASyB,OAAb,UAA+B,KAEvD,yBAAKN,UAAWC,IAAOE,UACvB,yBAAKH,UAAWC,IAAOpB,UACpBA,EAASI,KAAI,SAAAL,GACZ,OACE,wBAAI2B,IAAK3B,EAAKO,GAAIa,UAAWC,IAAOO,QAClC,kBAAC,IAAD,CACEC,GAAI7B,EAAKkB,KACTM,MAAO,CAAEM,eAAgB,OAAQL,MAAO,YAExC,yBAAKL,UAAWC,IAAOU,cACrB,kBAAC,IAAD,CAAKX,UAAWC,IAAOP,UAAWE,MAAOhB,EAAKa,OAGhD,yBAAKO,UAAWC,IAAOW,MACrB,uBACER,MAAO,CACLS,SAAU,QACVC,aAAc,SAGf,IACAlC,EAAKY,OAPR,KAOkBZ,EAAKW,MAEvB,4BAAKX,EAAKS,OAEV,2BAAIT,EAAKiB,kBASvB,kBAAC,IAAD,OAKC,IAAMkB,EAAK","file":"component---src-pages-blog-js-df59646cbcf6eae3ad0b.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"blog-module--container--30T_x\",\"blogList\":\"blog-module--blogList--1Xv0N\",\"column\":\"blog-module--column--dNFr7\",\"info\":\"blog-module--info--3inHE\",\"imgContainer\":\"blog-module--imgContainer--1tN_R\",\"thumbnail\":\"blog-module--thumbnail--1XH2e\",\"blogListContainer\":\"blog-module--blogListContainer--3Qrn7\",\"divider\":\"blog-module--divider--35Pqa\"};","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport styles from \"../styles/blog.module.css\"\nimport NavBar from \"../components/NavBar\"\nimport Footer from \"../components/Footer\"\nimport Img from \"gatsby-image\"\nimport { BlogListSection } from \"../components/Section\"\nimport Header from \"../components/Header\"\n\nimport BackgroundImage from \"gatsby-background-image\"\n\nexport default function blog({ data }) {\n  const blogList = data.Blogs.edges.map(edge => {\n    return {\n      id: edge.node.id,\n      title: edge.node.frontmatter.title,\n      date: edge.node.frontmatter.date,\n      author: edge.node.frontmatter.author,\n      img: edge.node.frontmatter.thumbnail.childImageSharp.fluid,\n      abstract: edge.node.frontmatter.abstract,\n      slug: edge.node.fields.slug,\n    }\n  })\n\n  return (\n    <div>\n      <NavBar />\n      <div className={styles.container}>\n        <Header divider=\"true\" style={{ color: \"white\" }}>\n          The Wild Side Of Town <p>{blogList.length} posts</p>{\" \"}\n        </Header>\n        <div className={styles.divider}></div>\n        <div className={styles.blogList}>\n          {blogList.map(blog => {\n            return (\n              <li key={blog.id} className={styles.column}>\n                <Link\n                  to={blog.slug}\n                  style={{ textDecoration: \"none\", color: \"inherit\" }}\n                >\n                  <div className={styles.imgContainer}>\n                    <Img className={styles.thumbnail} fluid={blog.img} />\n                  </div>\n\n                  <div className={styles.info}>\n                    <p\n                      style={{\n                        fontSize: \"small\",\n                        marginBottom: \"1rem\",\n                      }}\n                    >\n                      {\" \"}\n                      {blog.author}- {blog.date}\n                    </p>\n                    <h2>{blog.title}</h2>\n\n                    <p>{blog.abstract}</p>\n                  </div>\n                </Link>\n              </li>\n            )\n          })}\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query {\n    Blogs: allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            abstract\n            author\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1000) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          timeToRead\n        }\n      }\n    }\n    blogBg: file(relativePath: { eq: \"blogBg.jpg\" }) {\n      childImageSharp {\n        fluid(maxHeight: 200) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}